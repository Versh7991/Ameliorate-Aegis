// <auto-generated />
using System;
using Ameriolize_Aegis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ameriolize_Aegis.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210902182751_Added Seed Data")]
    partial class AddedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ameriolize_Aegis.Models.Attendance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PupilId");

                    b.HasIndex("TeacherId");

                    b.ToTable("PupilAttendance");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Centre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Centres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddressLine1 = "123 John Newton SW",
                            AddressLine2 = "Newton Park",
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 86, DateTimeKind.Local).AddTicks(5374),
                            Name = "Kabega"
                        },
                        new
                        {
                            Id = 2L,
                            AddressLine1 = "237 John Newton SW",
                            AddressLine2 = "New Brighton",
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 88, DateTimeKind.Local).AddTicks(9699),
                            Name = "Sol Futi"
                        },
                        new
                        {
                            Id = 3L,
                            AddressLine1 = "123 John Newton SW",
                            AddressLine2 = "Newton Park",
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 88, DateTimeKind.Local).AddTicks(9777),
                            Name = "Daku"
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.LessonPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("LessonPlans");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Parent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(4904),
                            DoB = new DateTime(1994, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(7104),
                            FirstName = "Jane",
                            LastName = "Pope"
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8221),
                            DoB = new DateTime(1988, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8299),
                            FirstName = "Thembeka",
                            LastName = "Qweba"
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8344),
                            DoB = new DateTime(1976, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8347),
                            FirstName = "Jane",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8350),
                            DoB = new DateTime(1967, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8352),
                            FirstName = "Jon",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8355),
                            DoB = new DateTime(1992, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8356),
                            FirstName = "Joshua",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 6L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8359),
                            DoB = new DateTime(1972, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8360),
                            FirstName = "Thandi",
                            LastName = "Newton"
                        },
                        new
                        {
                            Id = 7L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8363),
                            DoB = new DateTime(1996, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8364),
                            FirstName = "Amanda",
                            LastName = "Qweba"
                        },
                        new
                        {
                            Id = 8L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8366),
                            DoB = new DateTime(2000, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8368),
                            FirstName = "Amyoli",
                            LastName = "Soze"
                        },
                        new
                        {
                            Id = 9L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8370),
                            DoB = new DateTime(1991, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8372),
                            FirstName = "Jongokhaya",
                            LastName = "Khwili"
                        },
                        new
                        {
                            Id = 10L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8375),
                            DoB = new DateTime(1989, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(8376),
                            FirstName = "Thandeka",
                            LastName = "Khehle"
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Period", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Periods");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 90, DateTimeKind.Local).AddTicks(9456),
                            Name = "Term 1"
                        },
                        new
                        {
                            Id = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(838),
                            Name = "Term 2"
                        },
                        new
                        {
                            Id = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(877),
                            Name = "Term 3"
                        },
                        new
                        {
                            Id = 4L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(879),
                            Name = "Term 4"
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgramCentre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("ProgramId");

                    b.ToTable("Pro_Centres");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgramEnrollment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PupilId");

                    b.ToTable("Pro_Enrollments");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Programme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.ToTable("Programs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(3436),
                            Name = "Literacy Development"
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(5540),
                            Name = "Math And Science"
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(5593),
                            Name = "Song And Music"
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(5596),
                            Name = "Art And Music"
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(5599),
                            Name = "Language And Speech"
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgressReport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<long>("PeriodId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProgramId")
                        .HasColumnType("bigint");

                    b.Property<long>("PupilId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PeriodId");

                    b.HasIndex("ProgramId");

                    b.HasIndex("PupilId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ProgressReports");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Pupil", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CentreId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CentreId");

                    b.HasIndex("ParentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Pupils");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(5685),
                            DoB = new DateTime(2016, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(7770),
                            FirstName = "Peter",
                            LastName = "Pope",
                            ParentId = 1L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(9780),
                            DoB = new DateTime(2017, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(9916),
                            FirstName = "Amahle",
                            LastName = "Qweba",
                            ParentId = 2L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(9962),
                            DoB = new DateTime(2016, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(9970),
                            FirstName = "Junior",
                            LastName = "Doe",
                            ParentId = 3L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(5),
                            DoB = new DateTime(2017, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(12),
                            FirstName = "Jerry",
                            LastName = "Doe",
                            ParentId = 4L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(15),
                            DoB = new DateTime(2015, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(17),
                            FirstName = "JJ",
                            LastName = "Doe",
                            ParentId = 5L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(20),
                            DoB = new DateTime(2017, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(25),
                            FirstName = "Mihle",
                            LastName = "Newton",
                            ParentId = 6L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            CentreId = 2L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(27),
                            DoB = new DateTime(2016, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(28),
                            FirstName = "Sinazo",
                            LastName = "Qweba",
                            ParentId = 7L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(32),
                            DoB = new DateTime(2015, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(34),
                            FirstName = "Buhle",
                            LastName = "Soze",
                            ParentId = 8L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            CentreId = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(37),
                            DoB = new DateTime(2017, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(38),
                            FirstName = "Khaya",
                            LastName = "Khwili",
                            ParentId = 9L,
                            TeacherId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            CentreId = 3L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(42),
                            DoB = new DateTime(2016, 9, 2, 20, 27, 51, 92, DateTimeKind.Local).AddTicks(44),
                            FirstName = "Kubeka",
                            LastName = "Khehle",
                            ParentId = 10L,
                            TeacherId = 1L
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationTime = new DateTime(2021, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(1896),
                            DoB = new DateTime(1976, 9, 2, 20, 27, 51, 91, DateTimeKind.Local).AddTicks(3567),
                            FirstName = "Margaret",
                            LastName = "Van Hum",
                            Qualification = "Bachelor Of Education In Child Development"
                        });
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Attendance", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Pupil", "Pupil")
                        .WithMany()
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.LessonPlan", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Parent", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgramCentre", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Programme", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgramEnrollment", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Pupil", "Pupil")
                        .WithMany("Enrollments")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Programme", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId");
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.ProgressReport", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Period", "Period")
                        .WithMany()
                        .HasForeignKey("PeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Programme", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Pupil", "Pupil")
                        .WithMany("Reports")
                        .HasForeignKey("PupilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ameriolize_Aegis.Models.Pupil", b =>
                {
                    b.HasOne("Ameriolize_Aegis.Models.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("CentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Parent", "Parent")
                        .WithMany("Pupils")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ameriolize_Aegis.Models.Teacher", "Teacher")
                        .WithMany("Pupils")
                        .HasForeignKey("TeacherId");
                });
#pragma warning restore 612, 618
        }
    }
}
